defaults:
  - model: conformer_rnn_t
  - writer: cometml
  - metrics: example
  - datasets: train_clean
  - dataloader: dataloader_gpu
  - transforms: transforms
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 8e-4
  weight_decay: 0.000006
  betas: [0.9, 0.98]
lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 0.0025
  pct_start: 0.10
  steps_per_epoch: ${trainer.epoch_len}
  epochs: ${trainer.n_epochs}
  anneal_strategy: cos
loss_function:
  _target_: src.loss.RNNTLossWrapper
text_encoder:
  _target_: src.text_encoder.RNNTTextEncoder
trainer:
  log_step: 50
  n_epochs: 100
  epoch_len: 2000
  enable_profiler: False
  device_tensors: ["x", "text_encoded", "spectrogram_length", "text_encoded_length"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_WER_(Argmax)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1337
  max_grad_norm: 10.0
